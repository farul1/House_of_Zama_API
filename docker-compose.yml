version: "3.8"

services:
  # ========== REDIS ==========
  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - "6379"
    networks:
      - app-network

  # ========== MYSQL MAIN DB ==========
  main-db:
    image: mysql:8.0
    container_name: main-db
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - main-db-data:/var/lib/mysql
    ports:
      - "3309:3306"
    networks:
      - app-network

  # ========== PHPMyAdmin ==========
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: main-db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8085:80"
    depends_on:
      - main-db
    networks:
      - app-network

  # ========== MAILPIT (Email Testing) ==========
  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    networks:
      - app-network

  # ========== CLIENT SERVICE ==========
  client-app:
    build: ./client-service
    container_name: client-app
    working_dir: /var/www
    volumes:
      - ./client-service:/var/www
    depends_on:
      - main-db
      - redis
    env_file:
      - ./client-service/.env
    networks:
      - app-network
    restart: unless-stopped

  client-web:
    image: nginx:alpine
    container_name: client-web
    volumes:
      - ./client-service:/var/www
      - ./client-service/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9001:80"
    depends_on:
      - client-app
    networks:
      - app-network

  # ========== ORDER SERVICE ==========
  order-app:
    build: ./order-service
    container_name: order-app
    working_dir: /var/www
    volumes:
      - ./order-service:/var/www
    depends_on:
      - main-db
      - redis
      - client-web
      - client-app
    env_file:
      - ./order-service/.env
    networks:
      - app-network
    restart: unless-stopped

  order-web:
    image: nginx:alpine
    container_name: order-web
    volumes:
      - ./order-service:/var/www
      - ./order-service/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9003:80"
    depends_on:
      - order-app
    networks:
      - app-network

  order-queue:
    build: ./order-service
    container_name: order-queue
    working_dir: /var/www
    volumes:
      - ./order-service:/var/www
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=60
    depends_on:
      - order-app
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # ========== PHOTOGRAPHY SERVICE ==========
  photography-app:
    build: ./photography-service
    container_name: photography-app
    working_dir: /var/www
    volumes:
      - ./photography-service:/var/www
    depends_on:
      - main-db
      - redis
    env_file:
      - ./photography-service/.env
    networks:
      - app-network
    restart: unless-stopped

  photography-web:
    image: nginx:alpine
    container_name: photography-web
    volumes:
      - ./photography-service:/var/www
      - ./photography-service/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9005:80"
    depends_on:
      - photography-app
    networks:
      - app-network

  # ========== PORTFOLIO SERVICE ==========
  portfolio-app:
    build: ./portfolio-service
    container_name: portfolio-app
    working_dir: /var/www
    volumes:
      - ./portfolio-service:/var/www
    depends_on:
      - main-db
      - redis
    env_file:
      - ./portfolio-service/.env
    networks:
      - app-network
    restart: unless-stopped

  portfolio-web:
    image: nginx:alpine
    container_name: portfolio-web
    volumes:
      - ./portfolio-service:/var/www
      - ./portfolio-service/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9006:80"
    depends_on:
      - portfolio-app
    networks:
      - app-network

  # ========== SCHEDULE SERVICE ==========
  schedule-app:
    build: ./schedule-service
    container_name: schedule-app
    working_dir: /var/www
    volumes:
      - ./schedule-service:/var/www
    depends_on:
      - main-db
      - redis
    env_file:
      - ./schedule-service/.env
    networks:
      - app-network
    restart: unless-stopped

  schedule-web:
    image: nginx:alpine
    container_name: schedule-web
    volumes:
      - ./schedule-service:/var/www
      - ./schedule-service/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9004:80"
    depends_on:
      - schedule-app
    networks:
      - app-network

  # ========== SERVICE CATALOG ==========
  catalog-app:
    build: ./service-catalog-service
    container_name: catalog-app
    working_dir: /var/www
    volumes:
      - ./service-catalog-service:/var/www
    depends_on:
      - main-db
      - redis
    env_file:
      - ./service-catalog-service/.env
    networks:
      - app-network
    restart: unless-stopped

  catalog-web:
    image: nginx:alpine
    container_name: catalog-web
    volumes:
      - ./service-catalog-service:/var/www
      - ./service-catalog-service/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9002:80"
    depends_on:
      - catalog-app
    networks:
      - app-network

volumes:
  main-db-data:

networks:
  app-network:
    driver: bridge
